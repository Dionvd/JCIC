package app.ui;

import app.bean.AdminPanelHandler;
import app.entity.Settings;
import app.enums.Action;
import java.awt.Component;
import java.util.Map;

/**
 *
 * @author dion
 */
public class AdminPanel extends javax.swing.JFrame {

    /**
     * Creates new form AdminPanel
     */
    public AdminPanel() {
        initComponents();
        setVisible(true);
        
        for (Component component : this.getContentPane().getComponents()) {
            component.setEnabled(false);
        }
    }
    
    public void unlock()
    {
        for (Component component : this.getContentPane().getComponents()) {
            component.setEnabled(true);
        }
        
        Log.write("--DONE!");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ClearAllDataButton = new javax.swing.JButton();
        addMockedRoundButton = new javax.swing.JButton();
        setTurnDurationButton = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabelTitle = new javax.swing.JLabel();
        stopAllCurrentRoundsButton = new javax.swing.JButton();
        jSlider2 = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        setMaxQueueTimeButton = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        SaveActionsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        log1 = new app.ui.Log();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableActiveMatches1 = new app.ui.TableActiveMatches();
        stopSelectedRoundButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.white);

        ClearAllDataButton.setText("Clear all game data");
        ClearAllDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearAllDataButtonActionPerformed(evt);
            }
        });

        addMockedRoundButton.setText("Add a mocked round");
        addMockedRoundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMockedRoundButtonActionPerformed(evt);
            }
        });

        setTurnDurationButton.setText("Set turn duration");

        jSlider1.setMaximum(50);
        jSlider1.setMinimum(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setToolTipText("");
        jSlider1.setValue(6);
        jSlider1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider1MouseDragged(evt);
            }
        });
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider1MouseReleased(evt);
            }
        });

        jLabel1.setText("300ms");

        jLabelTitle.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabelTitle.setText("JCIC - Admin panel");

        stopAllCurrentRoundsButton.setText("Stop all currently played rounds");
        stopAllCurrentRoundsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopAllCurrentRoundsButtonActionPerformed(evt);
            }
        });

        jSlider2.setMaximum(60);
        jSlider2.setMinimum(1);
        jSlider2.setPaintLabels(true);
        jSlider2.setSnapToTicks(true);
        jSlider2.setToolTipText("");
        jSlider2.setValue(6);
        jSlider2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider2MouseDragged(evt);
            }
        });
        jSlider2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jSlider2MouseReleased(evt);
            }
        });

        jLabel2.setText("30s");

        setMaxQueueTimeButton.setText("Set max queue time");

        jCheckBox1.setText("I am sure");

        SaveActionsButton.setText("Save");
        SaveActionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionsButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Spread",  new Integer(10)},
                {"SpreadAll",  new Integer(40)},
                {"SpreadLine",  new Integer(60)},
                {"Empower",  new Integer(10)},
                {"Discharge",  new Integer(30)},
                {"Powerline",  new Integer(50)},
                {"Overclock",  new Integer(70)},
                {"Guard",  new Integer(30)},
                {"Storage",  new Integer(20)},
                {"Drain",  new Integer(5)},
                {"Explode",  new Integer(80)}
            },
            new String [] {
                "Action name", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        log1.setEditable(false);
        log1.setColumns(20);
        log1.setRows(5);
        log1.setText("--LOADED ADMIN PANEL\n--BOOTING WEBSERVICE AND CONNECTING TO DATABASE");
        log1.setFont(new java.awt.Font("PT Mono", 0, 12)); // NOI18N
        jScrollPane3.setViewportView(log1);

        tableActiveMatches1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Round", "Turn", "Players"
            }
        ));
        jScrollPane2.setViewportView(tableActiveMatches1);
        if (tableActiveMatches1.getColumnModel().getColumnCount() > 0) {
            tableActiveMatches1.getColumnModel().getColumn(0).setMinWidth(70);
            tableActiveMatches1.getColumnModel().getColumn(0).setPreferredWidth(70);
            tableActiveMatches1.getColumnModel().getColumn(0).setMaxWidth(110);
            tableActiveMatches1.getColumnModel().getColumn(1).setMinWidth(40);
            tableActiveMatches1.getColumnModel().getColumn(1).setPreferredWidth(40);
            tableActiveMatches1.getColumnModel().getColumn(1).setMaxWidth(80);
        }

        stopSelectedRoundButton.setText("Stop selected round");
        stopSelectedRoundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopSelectedRoundButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(setMaxQueueTimeButton))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(setTurnDurationButton))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ClearAllDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCheckBox1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SaveActionsButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(101, 101, 101)
                                    .addComponent(stopSelectedRoundButton)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(378, 378, 378)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stopAllCurrentRoundsButton)
                            .addComponent(addMockedRoundButton))))
                .addGap(24, 24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ClearAllDataButton)
                        .addComponent(jCheckBox1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(stopSelectedRoundButton)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addMockedRoundButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stopAllCurrentRoundsButton)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jSlider1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(setTurnDurationButton))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(setMaxQueueTimeButton))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SaveActionsButton)))))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseReleased
        jLabel1.setText(jSlider1.getValue()*50+"ms");
    }//GEN-LAST:event_jSlider1MouseReleased

    private void jSlider1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseDragged
        jLabel1.setText(jSlider1.getValue()*50+"ms");
    }//GEN-LAST:event_jSlider1MouseDragged

    private void jSlider2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseDragged
        jLabel2.setText(jSlider2.getValue()*5+"s");
        
    }//GEN-LAST:event_jSlider2MouseDragged

    private void jSlider2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseReleased
        jLabel2.setText(jSlider2.getValue()*5+"s");
    }//GEN-LAST:event_jSlider2MouseReleased

    private void ClearAllDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAllDataButtonActionPerformed
        if (jCheckBox1.isSelected())
        {
            AdminPanelHandler.RESET_ALL_GAME_DATA = true;
            
        }
    }//GEN-LAST:event_ClearAllDataButtonActionPerformed

    private void SaveActionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionsButtonActionPerformed
        Settings settings = new Settings();
        Map<Action, Integer> defaultActionCosts = settings.getDefaultActionCosts();
        defaultActionCosts.put(Action.SPREAD, (int)jTable1.getValueAt(0, 1));
        defaultActionCosts.put(Action.SPREADALL, (int)jTable1.getValueAt(1, 1));
        defaultActionCosts.put(Action.SPREADLINE, (int)jTable1.getValueAt(2, 1));
        defaultActionCosts.put(Action.EMPOWER, (int)jTable1.getValueAt(3, 1));
        defaultActionCosts.put(Action.DISCHARGE, (int)jTable1.getValueAt(4, 1));
        defaultActionCosts.put(Action.POWERLINE, (int)jTable1.getValueAt(5, 1));
        defaultActionCosts.put(Action.OVERCLOCK, (int)jTable1.getValueAt(6, 1));
        defaultActionCosts.put(Action.GUARD, (int)jTable1.getValueAt(7, 1));
        defaultActionCosts.put(Action.STORAGE, (int)jTable1.getValueAt(8, 1));
        defaultActionCosts.put(Action.DRAIN, (int)jTable1.getValueAt(9, 1));
        defaultActionCosts.put(Action.EXPLODE, (int)jTable1.getValueAt(10, 1));
        AdminPanelHandler.SETTINGS_TO_BE_SET = settings;
        AdminPanelHandler.SAVE_NEW_SETTINGS = true;
    }//GEN-LAST:event_SaveActionsButtonActionPerformed

    private void stopAllCurrentRoundsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopAllCurrentRoundsButtonActionPerformed
        AdminPanelHandler.STOP_ALL_ROUNDS = true;
    }//GEN-LAST:event_stopAllCurrentRoundsButtonActionPerformed

    private void addMockedRoundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMockedRoundButtonActionPerformed
        AdminPanelHandler.ADD_MOCKED_ROUND = true;
    }//GEN-LAST:event_addMockedRoundButtonActionPerformed

    private void stopSelectedRoundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopSelectedRoundButtonActionPerformed
        AdminPanelHandler.STOP_SELECTED_ROUND = true;
    }//GEN-LAST:event_stopSelectedRoundButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearAllDataButton;
    private javax.swing.JButton SaveActionsButton;
    private javax.swing.JButton addMockedRoundButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JTable jTable1;
    private app.ui.Log log1;
    private javax.swing.JButton setMaxQueueTimeButton;
    private javax.swing.JButton setTurnDurationButton;
    private javax.swing.JButton stopAllCurrentRoundsButton;
    private javax.swing.JButton stopSelectedRoundButton;
    private app.ui.TableActiveMatches tableActiveMatches1;
    // End of variables declaration//GEN-END:variables
}
